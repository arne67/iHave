plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.susarne.ihave2"
        minSdk 29
        targetSdk 34
        versionCode 6
        versionName "1.0"

        manifestPlaceholders = [
                appAuthRedirectScheme: 'com.susarne.ihave2'
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]

            }
        }
        signingConfig signingConfigs.debug
        // Indlæs variabler fra release.properties
        def globalPrivatePropertiesFile = rootProject.file('global-private.properties')
        if (globalPrivatePropertiesFile.exists()) {
            def globalPrivateProperties = new Properties()
            globalPrivateProperties.load(new FileInputStream(globalPrivatePropertiesFile))
            resValue "string", "oauthClientId", globalPrivateProperties.getProperty('oauthClientId')
        }
    }



    buildTypes {
        release {
            debug{
                debuggable false
            }
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher",
                    appIconRound: "@mipmap/ic_launcher_round"]
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_namex", "iHave 1.4"
            resValue "string", "file_provider", "com.susarne.ihave2.fileprovider"
            "com.susarne.ihave2.fileprovider"

            // Indlæs variabler fra release.properties
            def releasePropertiesFile = rootProject.file('release.properties')
            if (releasePropertiesFile.exists()) {
                def releaseProperties = new Properties()
                releaseProperties.load(new FileInputStream(releasePropertiesFile))
                resValue "string", "googlePhotoFolderName", releaseProperties.getProperty('googlePhotoFolderName')
                resValue "string", "googleDriveFolderName", releaseProperties.getProperty('googleDriveFolderName')
                resValue "string", "oauthScheme", releaseProperties.getProperty('oauthScheme')
                resValue "string", "ihaveCloudImageFolder", releaseProperties.getProperty('ihaveCloudImageFolder')
            }
            // Indlæs variabler fra release-private.properties
            def releasePrivatePropertiesFile = rootProject.file('release-private.properties')
            if (releasePrivatePropertiesFile.exists()) {
                def releasePrivateProperties = new Properties()
                releasePrivateProperties.load(new FileInputStream(releasePrivatePropertiesFile))
                resValue "string", "ihaveCloudBaseUrl", releasePrivateProperties.getProperty('ihaveCloudBaseUrl')
            }

        }
        debug {
            debug{
                debuggable true
            }
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_test",
                    appIconRound: "@mipmap/ic_launcher_test_round"]
            applicationIdSuffix ".debug"
            resValue "string", "app_namex", "iHave"
            resValue "string", "file_provider", "com.susarne.ihave2.fileprovider.debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-debug.pro'
            // Indlæs variabler fra debug.properties
            def debugPropertiesFile = rootProject.file('debug.properties')
            if (debugPropertiesFile.exists()) {
                def debugProperties = new Properties()
                debugProperties.load(new FileInputStream(debugPropertiesFile))
                resValue "string", "googlePhotoFolderName", debugProperties.getProperty('googlePhotoFolderName')
                resValue "string", "googleDriveFolderName", debugProperties.getProperty('googleDriveFolderName')
                resValue "string", "oauthScheme", debugProperties.getProperty('oauthScheme')
                resValue "string", "ihaveCloudImageFolder", debugProperties.getProperty('ihaveCloudImageFolder')
                // Brug de indlæste variabler efter behov
            }
            // Indlæs variabler fra debug-private.properties
            def debugPrivatePropertiesFile = rootProject.file('debug-private.properties')
            if (debugPrivatePropertiesFile.exists()) {
                def debugPrivateProperties = new Properties()
                debugPrivateProperties.load(new FileInputStream(debugPrivatePropertiesFile))
                resValue "string", "ihaveCloudBaseUrl", debugPrivateProperties.getProperty('ihaveCloudBaseUrl')
                // Brug de indlæste variabler efter behov
            }
        }



    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation platform('com.google.firebase:firebase-bom:33.0.0')

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation "androidx.security:security-crypto:1.0.0"

    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:3.1.4"

    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.7.2'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    //Logging Network Calls
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    implementation 'com.auth0.android:jwtdecode:2.0.0'
    implementation 'net.openid:appauth:0.9.1'
    implementation 'com.auth0.android:jwtdecode:2.0.0'

    implementation 'com.google.photos.library:google-photos-library-client:1.7.2'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20220815-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.3.0'
    // Work Manager
    implementation 'androidx.work:work-runtime:2.7.1'

    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.firebase:firebase-storage:20.0.1'
    implementation 'com.google.firebase:firebase-auth:21.0.1'

    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.firebase:firebase-analytics:21.0.0'


}
